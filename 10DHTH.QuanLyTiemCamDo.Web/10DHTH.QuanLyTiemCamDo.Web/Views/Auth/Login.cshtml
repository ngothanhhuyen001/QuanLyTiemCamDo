@using _10DHTH.QuanLyTiemCamDo.DataAccess.ViewModels
@using _10DHTH.QuanLyTiemCamDo.Web.Helpers.Extensions
@model _10DHTH.QuanLyTiemCamDo.DataAccess.ViewModels.LoginRequest
@{
    ViewData["title"] = "Login";
	if (Context.Session.Get<UserSession>("_authSession") != null)
	{
		Context.Response.Redirect("/index");
	}
}
<!-- Content page -->
<section class="bg0 p-t-50 p-b-116">
	<div class="container">
			
			<div class="size-210 bor10 p-lr-70 p-t-55 p-b-70 p-lr-15-lg w-full-md" style="margin: auto;">
			@using (Html.BeginForm("Login", "Auth", FormMethod.Post))
			{
				<h4 class="mtext-105 cl2 txt-center p-b-30">
			LOGIN
						</h4>
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })

				<div class="bor8 m-b-20 how-pos4-parent">

					@Html.TextBoxFor(model => model.Email, new { @class = "form-control", @autofocus = "autofocus", @placeholder = "Your Email Address" })
				</div>

				<div style="margin-bottom: 25px;padding-left:7%" class="input-group">

					@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
				</div>

				<div class="bor8 m-b-20 how-pos4-parent">

					@Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Password" })

				</div>
				<div style="margin-bottom: 25px;padding-left:7%" class="input-group">

					@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
				</div>


				<button type="submit" class="flex-c-m stext-101 cl0 size-121 bg3 bor1 hov-btn3 p-lr-15 trans-04 pointer">
					Submit
				</button>

			}
		</div>
	</div>
</section>



	